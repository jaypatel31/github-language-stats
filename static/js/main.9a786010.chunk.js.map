{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/SearchBar.js","components/spinner.gif","components/Spinner.js","components/Card.js","components/ProEffecient.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["state","action","type","stats","languages","payload","tmp","total","isLoading","initalState","repo","GlobalContext","React","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","checkValue","val","present","i","length","name","getData","res","a","Promise","all","data","map","item","fork","axios","get","languages_url","process","then","response","Object","keys","value","tmpObject","push","catch","error","console","log","fetchRepo","userName","repos","err","alert","Provider","LoadingStart","SearchBar","useState","setUserName","useContext","style","width","className","htmlFor","onChange","e","target","id","placeholder","onClick","event","preventDefault","Spinner","src","spinner","alt","margin","display","Card","fontSize","Math","round","role","ProEffecient","Cards","reduce","prev","current","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a786010.chunk.js","sourcesContent":["export default (state,action) => {\r\n    switch(action.type){\r\n        case \"REQUEST_FETCH\":\r\n            return{\r\n                ...state,\r\n                stats:{...state.stats, languages:action.payload.tmp,total:action.payload.total},\r\n            }\r\n        case \"LOADING_START\":\r\n            return{\r\n                ...state,\r\n                stats:{...state.stats,isLoading:true}\r\n            }\r\n        case \"LOADING_END\":\r\n            return{\r\n                ...state,\r\n                stats:{...state.stats,isLoading:false}\r\n            }\r\n        default:return state;\r\n    }\r\n}","import React, { useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\"\r\nimport axios from \"axios\";\r\n\r\nconst initalState = {\r\n    stats: {\r\n        repo:[],\r\n        languages:[],\r\n        isLoading:false,\r\n        total:0,\r\n    }\r\n}\r\n\r\nexport const GlobalContext = React.createContext(initalState);\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(AppReducer, initalState);\r\n\r\n    const checkValue = (tmp,val) => {\r\n        let present;\r\n        \r\n        for(let i = 0; i<tmp.length;i++){\r\n            \r\n            if(tmp[i].name === val){\r\n                return i;\r\n            }\r\n            else{\r\n                present = false;\r\n            }\r\n        }\r\n        return present;\r\n    }\r\n\r\n    const LoadingStart = () =>{\r\n        dispatch({\r\n            type:\"LOADING_START\",\r\n        })\r\n    }\r\n\r\n\r\n    const getData = async (tmp,total,res) =>{\r\n        let abc = await Promise.all(res.data.map(async (item) => {\r\n            if(item.fork === false){\r\n                await axios.get(`${item.languages_url}?access_token=${process.env.REACT_APP_MM_KEY}`)\r\n                .then((response) =>{\r\n                    \r\n                    Object.keys(response.data).map(async (val)=>{\r\n                        total+=response.data[val];\r\n                        if(tmp.length > 0){\r\n                            let present = await checkValue(tmp,val);\r\n                            \r\n                            if(present !== false){\r\n                                tmp[present].value += response.data[val];\r\n                                tmp[present].repo++;\r\n                            }\r\n                            else{\r\n                                let tmpObject = {};\r\n                                tmpObject.name = val;\r\n                                tmpObject.value = response.data[val];\r\n                                tmpObject.repo = 1;\r\n                                tmp.push(tmpObject);\r\n                            }\r\n                        }\r\n                        else{\r\n                            let tmpObject = {};\r\n                            tmpObject.name = val;\r\n                            tmpObject.value = response.data[val];\r\n                            tmpObject.repo = 1;\r\n                            tmp.push(tmpObject);\r\n                        }\r\n                           \r\n                    })\r\n                })\r\n                .catch(error=>console.log(error))\r\n            }\r\n            return item.name;\r\n        }));\r\n        \r\n        \r\n            console.log(tmp);\r\n            return {tmp,total};\r\n        \r\n    }\r\n\r\n\r\n    const fetchRepo = async (userName) => {\r\n        \r\n        let total = 0;\r\n        let tmp = [];\r\n        await axios.get(`https://api.github.com/users/${userName}/repos?per_page=100&access_token=${process.env.REACT_APP_MM_KEY}`)\r\n            .then(async (res) => {\r\n                let repos = await getData(tmp,total,res);\r\n                \r\n                dispatch({\r\n                    type:\"REQUEST_FETCH\",\r\n                    payload:{tmp:repos.tmp,total:repos.total}\r\n                })\r\n\r\n                dispatch({\r\n                    type:\"LOADING_END\",\r\n                })\r\n                \r\n                \r\n                \r\n            })\r\n\r\n            .catch(err=>{\r\n                console.log(err);\r\n                alert(\"Please Check user Name\")\r\n            })\r\n\r\n            \r\n    }\r\n\r\n    return(\r\n        <GlobalContext.Provider value={{stats:state.stats,fetchRepo,LoadingStart}}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n\r\n}\r\n\r\n","import React,{useContext, useState} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst SearchBar = () => {\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    const {fetchRepo,LoadingStart} = useContext(GlobalContext)\r\n\r\n    const clickHandler = (event) =>{\r\n        event.preventDefault();\r\n        if(userName!==\"\"){\r\n            LoadingStart();\r\n            fetchRepo(userName);\r\n        }\r\n        else{\r\n            alert(\"Please Enter Username\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{width:\"80%\"}} className=\"form-group m-auto mb-4\">\r\n                <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-4\">Github Username</label>\r\n                <input value={userName} onChange={(e)=>setUserName(e.target.value)} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Github Username\"/>\r\n                \r\n            </div>\r\n            <div>\r\n                <button type=\"button\" style={{width:\"250px\"}} className=\"btn btn-primary m-auto d-block\" onClick={clickHandler}>Show Stats</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\r\nimport spinner from \"./spinner.gif\"\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <img\r\n                src={spinner}\r\n                alt=\"Loading..\"\r\n                style={{width:\"250px\",margin:\"40px auto\", display:'block'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\n\r\nconst Card = ({item,total}) => {\r\n    return (\r\n        <div className=\"card border-primary mb-4 card-container\" style={{width: \"20rem\"}}>\r\n            <div className=\"card-header d-flex justify-content-between\">{item.name} <i className=\"devicon-github-original-wordmark \" style={{fontSize:\"30px\"}}></i></div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                <p className=\"text-white\">Usage: {(Math.round(((item.value/total)*100)*10))/10}%</p>\r\n                <div className=\"progress bg-dark\">\r\n                    \r\n                    <div className=\"progress-bar progress-bar-striped progress-bar-animated  bg-info\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: `${(item.value/total)*100}%`}}></div>\r\n                </div>\r\n                </h4>\r\n                <p className=\"card-text\">No of Projects Build Using {item.name}: {item.repo}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\n\r\nconst ProEffecient = ({item,total}) => {\r\n    return (\r\n        <div className=\"card border-success m-auto mt-4 pro-card-container\" style={{width: \"80%\"}}>\r\n            <div className=\"card-header\">Expertice</div>\r\n            <div className=\"card-body d-flex justify-content-between\">\r\n                <div>\r\n                    <h4 className=\"card-title\">{item.name}</h4>\r\n                    <p className=\"card-text\">You have used {`${(Math.round(((item.value/total)*100)*10))/10}%`} of {item.name} in your Github Projects.</p>\r\n                </div>\r\n                <div>\r\n                    <i className=\"devicon-devicon-plain\" style={{fontSize:\"50px\"}}></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProEffecient\r\n","import React,{useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Spinner from './Spinner'\r\nimport Card from './Card'\r\nimport ProEffecient from './ProEffecient'\r\n\r\nconst Cards = () => {\r\n    const {stats} = useContext(GlobalContext)\r\n\r\n    const getPro = () => {\r\n        const max = stats.languages.reduce((prev, current) => (prev.value > current.value) ? prev : current)\r\n\r\n        return max\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                (stats.isLoading)?<Spinner/>\r\n                :(stats.languages.length === 0)?<h3 className=\"text-center mt-5\">Enter the User Name</h3>:\r\n                <div className=\"mt-5\">\r\n                    <div>\r\n                        <h4 className=\"text-center\">Your Pro Effecient Language</h4>\r\n                        <ProEffecient item={getPro()} total={stats.total}/>\r\n                    </div>\r\n                    <div className=\"d-flex flex-wrap justify-content-around m-auto mt-5\" style={{width:\"80%\"}}>\r\n                        {\r\n                            stats.languages.map((item,index)=>{\r\n                                return <Card item={item} total={stats.total} key={index}/>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import './App.css';\nimport {GlobalProvider} from \"./context/GlobalState\";\nimport SearchBar from './components/SearchBar';\nimport Cards from './components/Cards';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div>\n        <h2 className=\"mt-2 mb-2 text-center text-primary\">Github Language Stater</h2>\n        {/* Search Components */}\n        <SearchBar/>\n        {/* Card Component */}\n        <Cards/>\n        {/* Proeffecient Language card */}\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}